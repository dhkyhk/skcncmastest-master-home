server:
  port: ${running.port:8081}
  shutdown: graceful
  servlet:
    encoding:
      charset: utf-8
      force-response: true

spring:
  profiles:
    active: ${running.profile:local}
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
    generate-ddl: true
    hibernate.ddl-auto: none
  primary:
    datasource:
      driver-class-name: org.postgresql.Driver
      jdbc-url: jdbc:postgresql://db-msa-common.cbi24uq0o69d.ap-northeast-2.rds.amazonaws.com:5432/postgres
      username: postgres
      password: asdfg12345
  secondary:
    datasource:
      driver-class-name: org.postgresql.Driver
      jdbc-url: jdbc:postgresql://db-msa-common.cbi24uq0o69d.ap-northeast-2.rds.amazonaws.com:5432/postgres
      username: postgres
      password: asdfg12345
      
  kafka:
    name: sampleAChanged
    producer:
      bootstrap-servers: inno3t2:4192
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: inno3t2:4192
      group-id: msa3
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  messages:
    basename: messages/messages #message.properties 경로  messages 폴더 밑으로 모아 놓음
    encoding: utf-8
    cache-duration: 600 #600초 10분 마다 설정 파일 리로딩.

#카프카 구현 하면 추가하자..
#kafka:
#  send:
#    topic: sampleCChanged
#    group_id: msa3
#  rev:
#    topic: sampleAChanged
#    group_id: msa3

msa3:
  swagger:
    enabled: true
  auth:
    token: #인증 토큰 정보
      secret: ZmluYW5jZS1tc2EtYmFja2VuZC1qd3Qtc2VjcmV0LWZpbmFuY2UtbXNhLWJhY2tlbmQtand0LXNlY3JldC1maW5hbmNlLW1zYS1iYWNrZW5kLWp3dC1zZWNyZXQK
      valid-minute: 30 #30분


